openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/posts/:
    get:
      operationId: api_posts_retrieve
      description: Show all posts in local database
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/posts/{post_id}:
    get:
      operationId: api_posts_retrieve_2
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
    delete:
      operationId: api_posts_destroy
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/posts/add/:
    post:
      operationId: api_posts_add_create
      description: Add new post if userId exists
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
  /api/posts/update/{post_id}/:
    put:
      operationId: api_posts_update_update
      description: Update post by using id
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostUpdate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        title:
          type: string
          maxLength: 150
        body:
          type: string
          maxLength: 1000
      required:
      - body
      - id
      - title
      - userId
    PostCreate:
      type: object
      properties:
        userId:
          type: integer
        title:
          type: string
          maxLength: 150
        body:
          type: string
          maxLength: 1000
      required:
      - body
      - title
      - userId
    PostUpdate:
      type: object
      properties:
        title:
          type: string
          maxLength: 150
        body:
          type: string
          maxLength: 1000
      required:
      - body
      - title
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
